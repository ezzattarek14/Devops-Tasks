pipeline {
    agent any

    environment {
        IMAGE_NAME = "spring-petclinic"
        IMAGE_TAG  = "latest"
        REGISTRY   = "localhost:8083"
    }

stage('SonarQube Analysis') {
    steps {
        withSonarQubeEnv('MySonarQube') {
            sh 'mvn clean verify sonar:sonar'
            echo ' SonarQube Analysis Done '
        }
    }
}


    stages {
        stage('Run Container') {
            steps {
                script {
                   
                    sh "docker run -d --name petclinic -p 8082:8080 ${IMAGE_NAME}:${IMAGE_TAG}"
                    echo 'Run Container Done'
                }
            }
        }

        stage('Push to Nexus') {
            steps {
                script {
                    sh """
                        docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
                        echo 'Logging in to Nexus...'
                        docker login localhost:8083 -u admin -p fb69f055-3bb8-4e6c-ba45-050545449b74
                        docker push ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished!'
        }
        failure {
            echo 'Pipeline failed ❌'
        }
        success {
            echo 'Pipeline succeeded ✅'
        }
    }
}
